{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red194\green126\blue101;\red23\green23\blue23;\red202\green202\blue202;
\red89\green138\blue67;\red140\green211\blue254;\red212\green214\blue154;\red67\green192\blue160;\red167\green197\blue152;
\red38\green38\blue38;\red254\green254\blue254;\red14\green14\blue14;\red0\green0\blue0;\red244\green244\blue244;
}
{\*\expandedcolortbl;;\cssrgb\c80784\c56863\c47059;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c41569\c60000\c33333;\cssrgb\c61176\c86275\c99608;\cssrgb\c86275\c86275\c66667;\cssrgb\c30588\c78824\c69020;\cssrgb\c70980\c80784\c65882;
\cssrgb\c20000\c20000\c20000;\cssrgb\c99608\c99608\c99608;\cssrgb\c6667\c6667\c6667;\cssrgb\c0\c0\c0;\cssrgb\c96471\c96471\c96471;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28\fsmilli14400 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
Aug/13/21 class example and home work (at the end of line) :\
"""\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 dict data types :\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 1. duplicate key is not allow\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 2. value will be duplicate\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 3. key value pair combinations\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 eg :\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 d = \{101:"this",130:"not is", 102:"adithi"\}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # 1. creation empty dict\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 d\cf4 \strokec4  = \{\}\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf8 \strokec8 type\cf4 \strokec4 (\cf6 \strokec6 d\cf4 \strokec4 )) \cf5 \strokec5 #<class 'dict'>\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # 2. using inbuilt function we can also create dict \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 d2\cf4 \strokec4  = \cf8 \strokec8 dict\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf8 \strokec8 type\cf4 \strokec4 (\cf6 \strokec6 d2\cf4 \strokec4 )) \cf5 \strokec5 #<class 'dict'>\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 d3\cf4 \strokec4  = \{\cf9 \strokec9 1\cf4 \strokec4 :\cf2 \strokec2 "one"\cf4 \strokec4 ,\cf9 \strokec9 2\cf4 \strokec4 :\cf2 \strokec2 "two"\cf4 \strokec4 ,\cf9 \strokec9 3\cf4 \strokec4 :\cf2 \strokec2 "three"\cf4 \strokec4 \}\cb1 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # 1. for accessing value using key like -: 1,2,3 \cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # value is : one, two, three\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 d3\cf4 \strokec4 [\cf9 \strokec9 2\cf4 \strokec4 ]) \cf5 \strokec5 # two\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # 2 .for inserting new value with new key\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 d3\cf4 \strokec4 [\cf9 \strokec9 42\cf4 \strokec4 ] = \cf2 \strokec2 "new value"\cf4 \strokec4  \cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 d3\cf4 \strokec4 ) \cf5 \strokec5 # \{1: 'one', 2: 'two', 3: 'three', 42: 'new value'\}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # 3. for replacing value with key\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 d3\cf4 \strokec4 [\cf9 \strokec9 2\cf4 \strokec4 ]=\cf2 \strokec2 "new two"\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 d3\cf4 \strokec4 ) \cf5 \strokec5 #\{1: 'one', 2: 'new two', 3: 'three', 42: 'new value'\}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # for printing whole keys\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 d3\cf4 \strokec4 .\cf7 \strokec7 keys\cf4 \strokec4 ()) \cf5 \strokec5 # dict_keys([1, 2, 3, 42])\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # for printing whole values\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf7 \cb3 \strokec7 print\cf4 \strokec4 (\cf6 \strokec6 d3\cf4 \strokec4 .\cf7 \strokec7 values\cf4 \strokec4 ()) \cf5 \strokec5 #dict_values(['one', 'new two', 'three', 'new value'])\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # other way to define dict :\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf6 \cb3 \strokec6 info\cf4 \strokec4  = \{\cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 "name"\cf4 \strokec4 : \cf2 \strokec2 "deepti"\cf4 \strokec4 ,\cb1 \
\cb3     \cf2 \strokec2 "age"\cf4 \strokec4  : \cf9 \strokec9 10\cf4 \strokec4 ,\cb1 \
\cb3     \cf2 \strokec2 "phone"\cf4 \strokec4  : \cf9 \strokec9 123456\cf4 \strokec4 ,\cb1 \
\cb3     \cf2 \strokec2 "country"\cf4 \strokec4 : \cf2 \strokec2 "USA"\cf4 \strokec4 ,\cb1 \
\cb3 \}\cb1 \
\
\
\
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 \'93\'94\'94Note :\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 =   (assinging value) ,a = 10 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ==  comparing two value\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 !\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 @\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ~ ->tindle\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # -> has tag\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 $ -> doller \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 % -> percentage\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ^ -> power\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 & -> and \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 () -> small braces\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \{\} -> curly \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 / -> forward \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \\ -> bakcward\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 * -> multi\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 [] -> square barces\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 . -> for accessing current variable\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 : -> colon\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ; -> semi colon\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 & =and  ^=or  !=not ( bit wise operator)\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\
Example of (==) :\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # while True:\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     age1 = int(input("Enter your age :"))\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     age2 = int(input("Enter your age :"))\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     if age1 == age2:\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #         print("welcome to python prog")\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     else:\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #         print("invalid input try again")    \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf4 \cb3     \cb1 \
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 output test case :\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \{1: 'one', 2: 'two', 3: 'three', 42: 'new value'\}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Enter your age :10\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Enter your age :20\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 invalid input try again\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Enter your age :20\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Enter your age :20\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 welcome to python prog\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\
\
Homework :\
=============\
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f1\b\fs28 \cf10 \cb11 \expnd0\expndtw0\kerning0
\ul \ulc10 \outl0\strokewidth0 Python dict :\
\pard\pardeftab720\sa400\partightenfactor0

\f2\b0 \cf12 \ulnone 1.\'a0Select correct ways to create an empty dictionary\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls1\ilvl0
\f3 \cf13 \cb14 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
sampleDict = \{\}
\f2 \cf12 \cb1 \
\ls1\ilvl0
\f3 \cf13 \cb14 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
sampleDict = dict()
\f2 \cf12 \cb1 \
\ls1\ilvl0
\f3 \cf13 \cb14 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
sampleDict = dict\{\}\
\pard\tx566\pardeftab720\sa160\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 2.\'a0Select the all correct way to\'a0
\f1\b remove
\f2\b0 \'a0the key\'a0
\f1\b marks
\f2\b0 \'a0from a dictionary\
\pard\pardeftab720\partightenfactor0

\f4 \cf13 \cb14 student = \{ \
  "name": "Emma", \
  "class": 9, \
  "marks": 75 \
\}\cf12 \
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 3.\'a0What is the output of the following dictionary operation\
\pard\pardeftab720\partightenfactor0

\f4 \cf12 \cb14 dict1 = \{"name": "Mike", "salary": 8000\}\
temp = dict1.pop("age")\
print(temp)\
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 4.\'a0What is the output of the following code\
\pard\pardeftab720\partightenfactor0

\f4 \cf12 \cb14 dict1 = \{"key1":1, "key2":2\}\
dict2 = \{"key2":2, "key1":1\}\
print(dict1 == dict2)\
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 5.\'a0Dictionary keys must be immutable\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa160\partightenfactor0
\ls2\ilvl0\cf12 \cb11 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
True\cb1 \
\ls2\ilvl0\cb11 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
False\
\pard\tx566\pardeftab720\sa160\partightenfactor0
\cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 6.\'a0What is the output of the following dictionary operation\
\pard\pardeftab720\partightenfactor0

\f4 \cf12 \cb14 dict1 = \{"name": "Mike", "salary": 8000\}\
temp = dict1.get("age")\
print(temp)\
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sa400\partightenfactor0
\cf12 \cb11 7.\'a0Select the correct ways to get the value of marks key.\
\pard\pardeftab720\partightenfactor0

\f4 \cf13 \cb14 student = \{\
  "name": "Emma",\
  "class": 9,\
  "marks": 75\
\}\cf12 \
\pard\pardeftab720\sl720\sa400\partightenfactor0

\f2 \cf12 \cb1 \
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28\fsmilli14400 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
}