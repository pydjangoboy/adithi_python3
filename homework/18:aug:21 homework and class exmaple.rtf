{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red194\green126\blue101;\red23\green23\blue23;\red202\green202\blue202;
\red89\green138\blue67;}
{\*\expandedcolortbl;;\cssrgb\c80784\c56863\c47059;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c41569\c60000\c33333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28\fsmilli14400 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Aug/18/21 class example and homework( at the end of line):\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ==========================================================\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 Important functions of dictionary:\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 1. len()\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 Returns the number of items in the dictionary \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 2. clear():\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 To remove all elements from the dictionary \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 3. get():\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 To get the value associated with the key\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 4. pop():\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 d.pop(key)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  It removes the entry associated with the specified key and returns the corresponding value\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2   1. If the specified key is not available then we will get KeyError\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 5. items():\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 It returns list of tuples representing key-value pairs. \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # d = \{1:"one", 2:"two", 3:"three"\}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # for k,v in d.items():\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     print(k, "=======" ,v)\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 1 ======= one\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 2 ======= two\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 3 ======= three\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # [()] ==> list of tuple\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # \{()\} == set of tuple \cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # 8. copy():\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # To create exactly duplicate dictionary(cloned copy) d1=d.copy()\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # d = \{1:"one", 2:"two", 3:"three"\}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # c = d.copy() #  \{1:"one", 2:"two", 3:"three"\}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(c)\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(d.pop(1))\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(c)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # \{1: 'one', 2: 'two', 3: 'three'\}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # one\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # \{1: 'one', 2: 'two', 3: 'three'\}\cf4 \cb1 \strokec4 \
\
\
\cf5 \cb3 \strokec5 # Dictionary Comprehension:\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # for printing even no : # for even no : 0,2,4..N\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # dc = \{ i:i*2 for i in range(0,20) \}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(dc)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # for k,v in dc.items():\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #     print(k,"=====",v)\cf4 \cb1 \strokec4 \
\
\
\cf5 \cb3 \strokec5 # s = "this is string"\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(s)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # prob  : this is one \cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #       this is second line\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # s1 = "this is one\\nthis is second line"\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(s1)\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 if outerside double quote then inside only applicable single quote\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 if outerside single quote then innerside only applicable double quote\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl420\partightenfactor0
\cf5 \cb3 \strokec5 # prob : "this is one 'this' is second line"\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # s2 = "this is one 'this' is second line"\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(s2)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # this is one 'this' is second line\cf4 \cb1 \strokec4 \
\
\
\cf5 \cb3 \strokec5 # prob : 'this is one "this" is second line'\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # s3 = 'this is one "this" is second line'\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 # print(s3)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 # this is one "this" is second line\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 homework 18/aug/21 : \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ====================\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 1. using dict how to print odd and even number and print all keys and values\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 2. using list how to print odd and even number \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 3. using tuple how to print odd and even number \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 4. using set how to print odd and even number \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 hint : logic same for all data types\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 """\cf4 \cb1 \strokec4 \
\
\
\
}